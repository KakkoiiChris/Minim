; Brainfuck Interpreter \
  Christian Alexander   \
  07/18/2021
  
; Memory Space Guide            \
  0: End of BF source           \
  1: Instruction pointer        \
  2: Cell pointer               \
  3: Loop level                 \
  4 -> [0]: BF Source           \
  [0] -> [0] + 30000: BF Memory

; Queue command line args system call
[1 :] = "args".
\< 1.

[0] = 4.

_> 1.
    \> [[0]].
    
    _< ?[[0]++].
_> 0.

[1 @ 3] = 0.

_> '('.
    _< [[1] + 4] == '+' || [[1] + 4] == '-' || [[1] + 4] == '<' || [[1] + 4] == '>' || [[1] + 4] == '[' || [[1] + 4] == ']' || [[1] + 4] == '.' || [[1] + 4] == ',' ? [[1] + 4] : ' '.
    
    _> '+'.
        [[2] + [0]]++.
        
        _^ [[2] + [0]] <> 256.
            [[2] + [0]] = 0.
    _< ' '.
    
    _> '-'.
        [[2] + [0]]--.
        
        _^ [[2] + [0]] <> -1.
            [[2] + [0]] = 255.
    _< ' '.
    
    _> '<'.
        [2]--.
        
        _^ [2] <> -1.
            [2] = 29999.
    _< ' '.
    
    _> '>'.
        [2]++.
        
        _^ [2] <> 30000.
            [2] = 0.
    _< ' '.
    
    _> '['.
        [3]++.
        
        _< [[2] + [0]] == 0 ? 'A' : 'a'.
        
        _> 'A'.
            _+ 'R'.
            
            _^ [[1] + 4] <> '['.
                [3]++.
            
            _^ [[1] + 4] <> ']'.
                [3]--.
            
            $< '('.
            #< [3].
            $< ')'.
            $< '\n'.
            
            _< [[1] + 4] == ']' && [3] == 0 ? 'a' : 'A'.
        _> 'a'.
    _< ' '.
    
    _> ']'.
        [3]--.
        
        _< [[2] + [0]] <> 0 ? 'B' : 'b'.
        
        _> 'B'.
            _+ 'L'.
            
            _^ [[1] + 4] <> '['.
                [3]++.
            
            _^ [[1] + 4] <> ']'.
                [3]--.
            
            $< '('.
            #< [3].
            $< ')'.
            $< '\n'.
            
            _< [[1] + 4] == '[' && [3] == 0 ? 'b' : 'B'.
        _> 'b'.
    _< ' '.
    
    _> '.'.
        $< [[2] + [0]].
    _< ' '.
    
    _> ','.
        $> [[2] + [0]].
    _> ' '.
    
    _> ' '.
    
    [1]++.
    
    _< ?[[1] + 4] ? '(' : ')'.
_> ')'.

_< '_'.
    _> 'L'.
        [1]--.
        
        _^ [1] <> -1.
            [1] = 0.
    _- 0.
    
    _> 'R'.
        [1]++.
        
        _^ [1] <> [0] - 1.
            [1] = [0] - 1.
    _- 0.
_> '_'.